# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-09-22 11:37
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AwardResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stud1', models.CharField(max_length=1000)),
                ('stud2', models.CharField(max_length=1000)),
                ('stud3', models.CharField(max_length=1000)),
                ('stud4', models.CharField(max_length=1000)),
                ('titleofpaper', models.TextField()),
                ('broadfield', models.TextField()),
                ('abstract', models.TextField()),
                ('conclusion', models.TextField()),
                ('googledoc', models.TextField()),
                ('whyaward', models.TextField()),
                ('suggestions', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('phone_no', models.CharField(max_length=100)),
                ('facebook_link', models.CharField(default='#', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('startdate', models.DateField()),
                ('description', models.CharField(max_length=2000)),
                ('timings', models.CharField(max_length=100, null=True)),
                ('venue', models.CharField(max_length=255, null=True)),
                ('organiser', models.CharField(max_length=100)),
                ('unpaid_event', models.BooleanField(default=False)),
                ('cost', models.CharField(blank=True, max_length=100, null=True)),
                ('softreq', models.CharField(blank=True, max_length=255, null=True)),
                ('isPublished', models.BooleanField(default=False)),
                ('isRegisterationOpen', models.BooleanField(default=False)),
                ('isApprovedUserListPublished', models.BooleanField(default=False)),
                ('isEventEnded', models.BooleanField(default=False)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to=events.models.get_banner_path)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=events.models.get_image_path)),
                ('contact_members', models.ManyToManyField(blank=True, to='events.ContactMember')),
                ('contents', models.ManyToManyField(blank=True, related_name='events', to='events.Content')),
            ],
        ),
        migrations.CreateModel(
            name='EventMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Submitted'), (2, 'Rejected'), (3, 'Approved'), (4, 'Participated')], default=1)),
                ('message', ckeditor_uploader.fields.RichTextUploadingField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('description', models.CharField(max_length=1000)),
                ('isPublished', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventQuestion', to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventQuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(max_length=1000)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionResponse', to='events.EventQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='EventRegisterationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestDate', models.DateTimeField()),
                ('status', models.IntegerField(choices=[(1, 'Submitted'), (2, 'Rejected'), (3, 'Approved'), (4, 'Participated')], default=1)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventRegRequest', to='events.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='eventquestionresponse',
            name='registerationRequest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registerationStatus', to='events.EventRegisterationRequest'),
        ),
        migrations.AddField(
            model_name='eventquestionresponse',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
